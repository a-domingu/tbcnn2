###############
Matrix w_comb1:
Number of elements bigger than 1:  tensor(6)    
Number of elements smaller than -1:  tensor(5)  
###############
Matrix w_comb2:
Number of elements bigger than 1:  tensor(10)   
Number of elements smaller than -1:  tensor(5)  
###############
Matrix w_t:
Number of elements bigger than 1:  tensor(460)  
Number of elements smaller than -1:  tensor(509)
###############
Matrix w_r:
Number of elements bigger than 1:  tensor(453)  
Number of elements smaller than -1:  tensor(481)
###############
Matrix w_l:
Number of elements bigger than 1:  tensor(519)
Number of elements smaller than -1:  tensor(491)
###############
Matrix b_conv:
Number of elements bigger than 1:  tensor(17)
Number of elements smaller than -1:  tensor(14)
###############
Matrix w_hidden:
Number of elements bigger than 1:  tensor(12)
Number of elements smaller than -1:  tensor(12)
###############
Vector b_hidden:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(1)
###############
Combined vector: 
Number of elements bigger than 4:  tensor(1398)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(51704)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(76)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([898.1285], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(368)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(62)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([-20.1331], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(46161)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(87)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([51.0909], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(1382)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(77586)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(86)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([-112.2666], grad_fn=<AddBackward0>)
Outputs:
 tensor([1.0000e+00, 1.8043e-09, 1.0000e+00, 0.0000e+00], grad_fn=<CatBackward>)
tensor(-9.7745e-09)
tensor(-3.1424e-07)
tensor(1.5678e-08)
tensor(1.1605e-08)
tensor(1.3044e-08)
tensor(3.5400e-09)
tensor(3.3647e-07)
tensor(4.5108e-10)
Epoch:  0 , Time:  9.793694972991943 , Loss:  tensor(50., grad_fn=<BinaryCrossEntropyBackward>)
###############




>>> torch.randn(4)
tensor([-2.1436,  0.9966,  2.3426, -0.6366])
>>> torch.randn(2, 3)
tensor([[ 1.5954,  2.8929, -1.0923],
        [ 1.1719, -0.4709, -0.1996]])


>>> torch.rand(4)
tensor([ 0.5204,  0.2503,  0.3525,  0.5673])
>>> torch.rand(2, 3)
tensor([[ 0.8237,  0.5781,  0.6879],
        [ 0.3816,  0.7249,  0.0998]])


###############
Matrix w_comb1:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_comb2:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_t:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_r:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_l:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix b_conv:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_hidden:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Vector b_hidden:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(398)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(42)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([-60.1476], grad_fn=<AddBackward0>)
Combined vector:
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector:
Number of elements bigger than 4:  tensor(12)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(12)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([6.3446], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(790)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(40)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([56.0069], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(1419)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(42)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([32.7224], grad_fn=<AddBackward0>)
Outputs:
 tensor([7.5547e-27, 9.9825e-01, 1.0000e+00, 1.0000e+00], grad_fn=<CatBackward>)
tensor(-18.7577)
tensor(-129.0397)
tensor(-1.2706)
tensor(-2.2805)
tensor(-2.7561)
tensor(0.2343)
tensor(37.8338)
tensor(0.2496)
Epoch:  1 , Time:  6.393782138824463 , Loss:  tensor(1.5866, grad_fn=<BinaryCrossEntropyBackward>)
###############

###############
Matrix w_comb1:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_comb2:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_t:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_r:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_l:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix b_conv:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_hidden:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Vector b_hidden:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(399)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(41)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([-65.3820], grad_fn=<AddBackward0>)
Combined vector:
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(12)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(12)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([3.9822], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(766)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(40)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([50.0546], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(1405)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(42)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([30.4040], grad_fn=<AddBackward0>)
Outputs:
 tensor([4.0270e-29, 9.8170e-01, 1.0000e+00, 1.0000e+00], grad_fn=<CatBackward>)
tensor(-16.0269)
tensor(-104.3859)
tensor(-0.6717)
tensor(-1.6536)
tensor(-2.2956)
tensor(0.0891)
tensor(36.7625)
tensor(0.2454)
Epoch:  2 , Time:  6.896737813949585 , Loss:  tensor(1.0002, grad_fn=<BinaryCrossEntropyBackward>)
###############

###############
Matrix w_comb1:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_comb2:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_t:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_r:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_l:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix b_conv:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_hidden:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Vector b_hidden:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(399)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(41)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([-70.1311], grad_fn=<AddBackward0>)
Combined vector:
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(12)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(12)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([2.0490], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(764)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(39)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([44.7114], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(1388)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(42)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([28.1046], grad_fn=<AddBackward0>)
Outputs:
 tensor([3.4872e-31, 8.8585e-01, 1.0000e+00, 1.0000e+00], grad_fn=<CatBackward>)
tensor(-11.3420)
tensor(-72.7167)
tensor(-0.2707)
tensor(-0.2007)
tensor(-0.6032)
tensor(0.0723)
tensor(32.9084)
tensor(0.2215)
Epoch:  3 , Time:  7.0164406299591064 , Loss:  tensor(0.5426, grad_fn=<BinaryCrossEntropyBackward>)
###############

###############
Matrix w_comb1:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_comb2:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_t:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_r:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_l:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix b_conv:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_hidden:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Vector b_hidden:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(402)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(41)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([-74.5632], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(12)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(12)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([0.4746], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(754)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(39)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([40.0181], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(1376)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(42)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([26.3373], grad_fn=<AddBackward0>)
Outputs:
 tensor([4.1457e-33, 6.1648e-01, 1.0000e+00, 1.0000e+00], grad_fn=<CatBackward>)
tensor(-7.8106)
tensor(-60.1645)
tensor(-0.2047)
tensor(0.5731)
tensor(0.5108)
tensor(0.1297)
tensor(22.8006)
tensor(0.1541)
Epoch:  4 , Time:  6.436992406845093 , Loss:  tensor(0.2396, grad_fn=<BinaryCrossEntropyBackward>)
###############

###############
Matrix w_comb1:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_comb2:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_t:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_r:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_l:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix b_conv:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_hidden:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Vector b_hidden:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(406)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(41)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([-78.0022], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector:
Number of elements bigger than 4:  tensor(12)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(12)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([-0.6570], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(754)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(39)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([36.7666], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(1376)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(42)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([25.1165], grad_fn=<AddBackward0>)
Outputs:
 tensor([1.3307e-34, 3.4141e-01, 1.0000e+00, 1.0000e+00], grad_fn=<CatBackward>)
tensor(-4.3081)
tensor(-33.1716)
tensor(-0.1052)
tensor(0.3179)
tensor(0.2828)
tensor(0.0699)
tensor(12.6016)
tensor(0.0854)
Epoch:  5 , Time:  6.452756404876709 , Loss:  tensor(0.1044, grad_fn=<BinaryCrossEntropyBackward>)
###############

###############
Matrix w_comb1:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_comb2:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_t:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_r:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_l:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix b_conv:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_hidden:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Vector b_hidden:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(406)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(40)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([-79.9434], grad_fn=<AddBackward0>)
Combined vector:
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(12)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(12)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([-1.2867], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(753)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(39)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([34.9694], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(1377)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(42)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([24.4416], grad_fn=<AddBackward0>)
Outputs:
 tensor([1.9099e-35, 2.1642e-01, 1.0000e+00, 1.0000e+00], grad_fn=<CatBackward>)
tensor(-2.1624)
tensor(-17.5736)
tensor(-0.0458)
tensor(0.2937)
tensor(0.2826)
tensor(0.0188)
tensor(7.9798)
tensor(0.0541)
Epoch:  6 , Time:  6.458934783935547 , Loss:  tensor(0.0610, grad_fn=<BinaryCrossEntropyBackward>)
###############

###############
Matrix w_comb1:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_comb2:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_t:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_r:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_l:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix b_conv:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_hidden:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Vector b_hidden:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(409)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(40)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([-81.2254], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector:
Number of elements bigger than 4:  tensor(12)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(12)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([-1.7284], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(751)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(39)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([33.7739], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(1379)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(42)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([24.0205], grad_fn=<AddBackward0>)
Outputs:
 tensor([5.2996e-36, 1.5079e-01, 1.0000e+00, 1.0000e+00], grad_fn=<CatBackward>)
tensor(-1.5485)
tensor(-12.2482)
tensor(-0.0681)
tensor(0.1327)
tensor(0.1009)
tensor(0.0128)
tensor(5.5595)
tensor(0.0377)
Epoch:  7 , Time:  6.530292510986328 , Loss:  tensor(0.0409, grad_fn=<BinaryCrossEntropyBackward>)
###############

###############
Matrix w_comb1:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_comb2:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_t:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_r:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_l:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix b_conv:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_hidden:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Vector b_hidden:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(418)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(40)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([-82.1467], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector:
Number of elements bigger than 4:  tensor(12)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(12)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([-2.0761], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(749)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(39)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([32.9047], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(1378)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(42)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([23.7306], grad_fn=<AddBackward0>)
Outputs:
 tensor([2.1093e-36, 1.1144e-01, 1.0000e+00, 1.0000e+00], grad_fn=<CatBackward>)
tensor(-1.1407)
tensor(-9.0406)
tensor(-0.0529)
tensor(0.0982)
tensor(0.0747)
tensor(0.0093)
tensor(4.1086)
tensor(0.0279)
Epoch:  8 , Time:  6.4250853061676025 , Loss:  tensor(0.0295, grad_fn=<BinaryCrossEntropyBackward>)
###############

###############
Matrix w_comb1:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_comb2:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_t:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_r:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_l:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix b_conv:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Matrix w_hidden:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Vector b_hidden:
Number of elements bigger than 1:  tensor(0)
Number of elements smaller than -1:  tensor(0)
###############
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(419)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(40)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([-82.8270], grad_fn=<AddBackward0>)
Combined vector:
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(12)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(12)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([-2.3330], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(747)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(39)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([32.3023], grad_fn=<AddBackward0>)
Combined vector: 
Number of elements bigger than 4:  tensor(0)
Number of elements smaller than -4:  tensor(0)
###############
y vector: 
Number of elements bigger than 4:  tensor(1378)
Number of elements smaller than -4:  tensor(0)
###############
vector pooling:
Number of elements bigger than 4:  tensor(42)
Number of elements smaller than -4:  tensor(0)
###############
The input of the sigmoid function is:  tensor([23.5164], grad_fn=<AddBackward0>)
Outputs:
 tensor([1.0683e-36, 8.8426e-02, 1.0000e+00, 1.0000e+00], grad_fn=<CatBackward>)
tensor(-0.9043)
tensor(-7.1667)
tensor(-0.0416)
tensor(0.0780)
tensor(0.0593)
tensor(0.0073)
tensor(3.2600)
tensor(0.0221)
Epoch:  9 , Time:  6.2892255783081055 , Loss:  tensor(0.0231, grad_fn=<BinaryCrossEntropyBackward>)
###############